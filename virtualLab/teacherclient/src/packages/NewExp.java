/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package packages;

import javax.swing.table.DefaultTableModel;

import java.io.File;
import java.io.FileWriter;
import java.util.Vector;

import javax.swing.JFileChooser;
import javax.swing.UIManager;

import packages.*;
//import packages.NewExpCoding;
/**
 *
 * @author AndySheng
 */
public class NewExp extends javax.swing.JFrame {

    /**
     * Creates new form NewExp
     */
	public ClientSocket client;
    public NewExp(ClientSocket c) {
        try {  
     	   client = c;
	           UIManager.setLookAndFeel(//关键句1  
	           UIManager.getSystemLookAndFeelClassName());//关键句2  
	       } catch (Exception qe) {  
	           qe.printStackTrace();  
     } 
     initComponents();
     int x =(((int)java.awt.Toolkit.getDefaultToolkit().getScreenSize().width) - this.getWidth())/2;
     int y = (((int)java.awt.Toolkit.getDefaultToolkit().getScreenSize().height) - this.getHeight())/2; 
     this.setLocation(x,y);
     this.setVisible(true);
     
 }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        expName = new javax.swing.JTextField();
        entityName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        expFenpin = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pinTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        waveBtn = new javax.swing.JButton();
        done = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        jLabel3.setIcon(new javax.swing.ImageIcon("pins.png")); 
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("基本信息"));

        jLabel1.setText("实验名称：");

        jLabel2.setText("实体名称：");

        expName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expNameActionPerformed(evt);
            }
        });

        jLabel4.setText("实验分频：");

        expFenpin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expFenpinActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(expFenpin, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                    .addComponent(expName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                    .addComponent(entityName, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(expName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(entityName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(expFenpin, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("PIN脚设置"));

        pinTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null}
            },
            new String [] {
                 "Location","Node Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        pinTable.setRowHeight(20);
        pinTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pinTableMouseClicked(evt);
            }
        });
        pinTable.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                pinTablePropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(pinTable);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(179, 179, 179)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("波形文件导入"));

        waveBtn.setLabel("导入波形文件");
        waveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waveBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(106, Short.MAX_VALUE)
                .addComponent(waveBtn)
                .addGap(103, 103, 103))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(waveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        done.setText("确定");
        done.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					doneActionPerformed(evt);
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });

        cancel.setText("取消");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(257, 257, 257)
                        .addComponent(done, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(198, 198, 198)
                        .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(done, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 737, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>

    private void expNameActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    private void waveBtnActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
       try
       {
    	while(true)
    	{
    	//String selectedPath;
    	String temp;
    	JFileChooser fileChooser = new JFileChooser();   	
    	fileChooser.setDialogTitle("请选择VWF波形文件");
    	int returnVal = fileChooser.showOpenDialog(null);
		selectedPath = fileChooser.getSelectedFile().getPath(); //---------vhd文件路径---------//
		//String temp = selectedPath.split("\\\\");
		temp = selectedPath.substring(selectedPath.length()-3,selectedPath.length());
    	if(temp.equals("vwf"))
		break;
		new MessageBox("无效的文件，请单击选中VWF波形文件后按下确定！","");
	    //System.out.println(temp);
    	}
    	new MessageBox("选择成功！","");
       }catch (Exception e1) {
			e1.printStackTrace();
		}

    }                                       

    private void doneActionPerformed(java.awt.event.ActionEvent evt) throws Exception {                                     
        // TODO add your handling code here:
    	String entityname,expname,expfenpin = null;
    	entityname = entityName.getText();
    	expname = expName.getText();   //-----------实体名实验名----------------//
    	expfenpin = expFenpin.getText();
    	if(entityname.equals("")||entityname == null){
    		new MessageBox("未输入实体名","");
    	}
    	if(expname.equals("")||expname == null){
    		new MessageBox("未输入实验名","");
    	}
    	if(expfenpin.equals("")||expfenpin == null){
    		new MessageBox("未输入实验分频","");
    	}
    	if(selectedPath.equals("")||selectedPath == null){
    		new MessageBox("未导入波形文件","");
    	}
    	if(pinTable.getValueAt(pinTable.getRowCount()-1, 1) == null && pinTable.getValueAt(pinTable.getRowCount()-1, 0) == null){
    		int i = pinTable.getRowCount();
            String[] pinstring = new String[i];
            File f = new File("temp\\"+entityname+".txt"); //-----------路径要改--------//
    		f.createNewFile();
            try//将原pin脚文件清空
    		{
    			FileWriter fw =  new FileWriter(f);
    			fw.write("");
    			fw.close();
    		}catch(Exception x)
    		{
    			x.printStackTrace();
    		}
            for(int j =0;j<pinTable.getRowCount()-1;j++){
            	pinstring[j] = "set_location_assignment " + pinTable.getValueAt(j, 0) + " -to " + pinTable.getValueAt(j, 1) + "\r\n";
            	try 
				{
            		new File("temp\\"+entityname+".txt").createNewFile();
					FileWriter fos = new FileWriter("temp\\"+entityname+".txt", true);
					fos.write(pinstring[j]);
					fos.close();
				} catch (Exception x)
				{
					x.printStackTrace();
				}
            }
            try{

            }catch (Exception e1) {
    			e1.printStackTrace();
    		}
  
    	}
    	if((pinTable.getValueAt(pinTable.getRowCount()-1, 1) == null && pinTable.getValueAt(pinTable.getRowCount()-1, 0) == null)&&(!(entityname.equals("")||entityname == null))&&(!(expname.equals("")||expname == null))&&(!(selectedPath.equals("")||selectedPath == null))&&(!(expfenpin.equals("")||expfenpin == null))){
    		//System.out.println("done");
    		int biaozhi = 0;
    		MyFileReader reader = new MyFileReader("expInfo.ini");
    		v = new expInfo().getShudian();
    		for(int i = 0;i<v.size();i++){
    			String[] a = (String[]) v.elementAt(i);
    			if(expname.equals(a[0])){
    				 biaozhi = 1;
    				 break;}  			    
    			}
    		if(biaozhi == 1){
    			new MessageBox("实验已存在，请修改实验名","");
    		}
    		else{
    			//System.out.println(biaozhi);
    		//client.send("023");
    		//client.send(entityname);
    		//client.send(expname);
    		//client.send(expfenpin);
    		//client.sendFile(selectedPath); //vhd文件
    		String a = new MyFileReader(selectedPath).readFile();
    		new File("temp\\"+entityname+".vwf").createNewFile();
    		new MyFileWriter("temp\\"+entityname+".vwf").writeLine(a);
    		//client.sendFile("D:\\temp\\"+entityname+".txt"); //pin脚文件
    		this.setVisible(false);
    		new NewExpCoding(client,entityname,expname,expfenpin);
    		}
    	
    	}

    	if(!(pinTable.getValueAt(pinTable.getRowCount()-1, 1) == null && pinTable.getValueAt(pinTable.getRowCount()-1, 0) == null)){
    		new MessageBox("pin脚输入有误，请输入完成后按回车确认输入","");
    	}
    
    }                                    

    private void pinTableMouseClicked(java.awt.event.MouseEvent evt) {                                      
       // if(){
      //  }
    }                                     

    private void pinTablePropertyChange(java.beans.PropertyChangeEvent evt) {                                        
        if(pinTable.getValueAt(pinTable.getRowCount()-1, 1) != null && pinTable.getValueAt(pinTable.getRowCount()-1, 0) != null){
            DefaultTableModel model = (DefaultTableModel)pinTable.getModel();
            Vector temp = new Vector();
            temp.add(null);
            temp.add(null);
            model.addRow(temp);
        }
        
    }                                       

    private void expFenpinActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
    	this.setVisible(false);
    }                                      

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //new NewExp();
    }

    // Variables declaration - do not modify
    private Vector v;
    public String selectedPath = "";
    private javax.swing.JButton cancel;
    private javax.swing.JButton done;
    private javax.swing.JTextField entityName;
    private javax.swing.JTextField expFenpin;
    private javax.swing.JTextField expName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable pinTable;
    private javax.swing.JButton waveBtn;
    // End of variables declaration
}
